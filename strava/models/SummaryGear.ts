/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface SummaryGear
 */
export interface SummaryGear {
  /**
   * The gear's unique identifier.
   * @type {string}
   * @memberof SummaryGear
   */
  id?: string;
  /**
   * Resource state, indicates level of detail. Possible values: 2 -> "summary", 3 -> "detail"
   * @type {number}
   * @memberof SummaryGear
   */
  resourceState?: number;
  /**
   * Whether this gear's is the owner's default one.
   * @type {boolean}
   * @memberof SummaryGear
   */
  primary?: boolean;
  /**
   * The gear's name.
   * @type {string}
   * @memberof SummaryGear
   */
  name?: string;
  /**
   * The distance logged with this gear.
   * @type {number}
   * @memberof SummaryGear
   */
  distance?: number;
}

/**
 * Check if a given object implements the SummaryGear interface.
 */
export function instanceOfSummaryGear(value: object): value is SummaryGear {
  return true;
}

export function SummaryGearFromJSON(json: any): SummaryGear {
  return SummaryGearFromJSONTyped(json, false);
}

export function SummaryGearFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SummaryGear {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    resourceState:
      json["resource_state"] == null ? undefined : json["resource_state"],
    primary: json["primary"] == null ? undefined : json["primary"],
    name: json["name"] == null ? undefined : json["name"],
    distance: json["distance"] == null ? undefined : json["distance"],
  };
}

export function SummaryGearToJSON(json: any): SummaryGear {
  return SummaryGearToJSONTyped(json, false);
}

export function SummaryGearToJSONTyped(
  value?: SummaryGear | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    resource_state: value["resourceState"],
    primary: value["primary"],
    name: value["name"],
    distance: value["distance"],
  };
}
