/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ClubAthlete
 */
export interface ClubAthlete {
  /**
   * Resource state, indicates level of detail. Possible values: 1 -> "meta", 2 -> "summary", 3 -> "detail"
   * @type {number}
   * @memberof ClubAthlete
   */
  resourceState?: number;
  /**
   * The athlete's first name.
   * @type {string}
   * @memberof ClubAthlete
   */
  firstname?: string;
  /**
   * The athlete's last initial.
   * @type {string}
   * @memberof ClubAthlete
   */
  lastname?: string;
  /**
   * The athlete's member status.
   * @type {string}
   * @memberof ClubAthlete
   */
  member?: string;
  /**
   * Whether the athlete is a club admin.
   * @type {boolean}
   * @memberof ClubAthlete
   */
  admin?: boolean;
  /**
   * Whether the athlete is club owner.
   * @type {boolean}
   * @memberof ClubAthlete
   */
  owner?: boolean;
}

/**
 * Check if a given object implements the ClubAthlete interface.
 */
export function instanceOfClubAthlete(value: object): value is ClubAthlete {
  return true;
}

export function ClubAthleteFromJSON(json: any): ClubAthlete {
  return ClubAthleteFromJSONTyped(json, false);
}

export function ClubAthleteFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ClubAthlete {
  if (json == null) {
    return json;
  }
  return {
    resourceState:
      json["resource_state"] == null ? undefined : json["resource_state"],
    firstname: json["firstname"] == null ? undefined : json["firstname"],
    lastname: json["lastname"] == null ? undefined : json["lastname"],
    member: json["member"] == null ? undefined : json["member"],
    admin: json["admin"] == null ? undefined : json["admin"],
    owner: json["owner"] == null ? undefined : json["owner"],
  };
}

export function ClubAthleteToJSON(json: any): ClubAthlete {
  return ClubAthleteToJSONTyped(json, false);
}

export function ClubAthleteToJSONTyped(
  value?: ClubAthlete | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    resource_state: value["resourceState"],
    firstname: value["firstname"],
    lastname: value["lastname"],
    member: value["member"],
    admin: value["admin"],
    owner: value["owner"],
  };
}
