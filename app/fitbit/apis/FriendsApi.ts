/* tslint:disable */
/* eslint-disable */
/**
 * Fitbit Web API Explorer
 * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user\'s data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/developer-guide/authorization/.
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";

/**
 *
 */
export class FriendsApi extends runtime.BaseAPI {
  /**
   * Returns data of a user\'s friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.
   * Get Friends
   */
  async getFriendsRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<void>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      // oauth required
      headerParameters["Authorization"] = await this.configuration.accessToken(
        "oauth2",
        ["social"],
      );
    }

    const response = await this.request(
      {
        path: `/1.1/user/-/friends.json`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * Returns data of a user\'s friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.
   * Get Friends
   */
  async getFriends(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await this.getFriendsRaw(initOverrides);
  }

  /**
   * Returns data of a user\'s friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.
   * Get Friends Leaderboard
   */
  async getFriendsLeaderboardRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<void>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      // oauth required
      headerParameters["Authorization"] = await this.configuration.accessToken(
        "oauth2",
        ["social"],
      );
    }

    const response = await this.request(
      {
        path: `/1.1/user/-/leaderboard/friends.json`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * Returns data of a user\'s friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.
   * Get Friends Leaderboard
   */
  async getFriendsLeaderboard(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await this.getFriendsLeaderboardRaw(initOverrides);
  }
}
