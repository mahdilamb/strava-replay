/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * An enumeration of the sport types an activity may have. Distinct from ActivityType in that it has new types (e.g. MountainBikeRide)
 * @export
 */
export const SportType = {
  AlpineSki: "AlpineSki",
  BackcountrySki: "BackcountrySki",
  Badminton: "Badminton",
  Canoeing: "Canoeing",
  Crossfit: "Crossfit",
  EBikeRide: "EBikeRide",
  Elliptical: "Elliptical",
  EMountainBikeRide: "EMountainBikeRide",
  Golf: "Golf",
  GravelRide: "GravelRide",
  Handcycle: "Handcycle",
  HighIntensityIntervalTraining: "HighIntensityIntervalTraining",
  Hike: "Hike",
  IceSkate: "IceSkate",
  InlineSkate: "InlineSkate",
  Kayaking: "Kayaking",
  Kitesurf: "Kitesurf",
  MountainBikeRide: "MountainBikeRide",
  NordicSki: "NordicSki",
  Pickleball: "Pickleball",
  Pilates: "Pilates",
  Racquetball: "Racquetball",
  Ride: "Ride",
  RockClimbing: "RockClimbing",
  RollerSki: "RollerSki",
  Rowing: "Rowing",
  Run: "Run",
  Sail: "Sail",
  Skateboard: "Skateboard",
  Snowboard: "Snowboard",
  Snowshoe: "Snowshoe",
  Soccer: "Soccer",
  Squash: "Squash",
  StairStepper: "StairStepper",
  StandUpPaddling: "StandUpPaddling",
  Surfing: "Surfing",
  Swim: "Swim",
  TableTennis: "TableTennis",
  Tennis: "Tennis",
  TrailRun: "TrailRun",
  Velomobile: "Velomobile",
  VirtualRide: "VirtualRide",
  VirtualRow: "VirtualRow",
  VirtualRun: "VirtualRun",
  Walk: "Walk",
  WeightTraining: "WeightTraining",
  Wheelchair: "Wheelchair",
  Windsurf: "Windsurf",
  Workout: "Workout",
  Yoga: "Yoga",
} as const;
export type SportType = (typeof SportType)[keyof typeof SportType];

export function instanceOfSportType(value: any): boolean {
  for (const key in SportType) {
    if (Object.prototype.hasOwnProperty.call(SportType, key)) {
      if (SportType[key as keyof typeof SportType] === value) {
        return true;
      }
    }
  }
  return false;
}

export function SportTypeFromJSON(json: any): SportType {
  return SportTypeFromJSONTyped(json, false);
}

export function SportTypeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SportType {
  return json as SportType;
}

export function SportTypeToJSON(value?: SportType | null): any {
  return value as any;
}

export function SportTypeToJSONTyped(
  value: any,
  ignoreDiscriminator: boolean,
): SportType {
  return value as SportType;
}
