/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * A union type representing the time spent in a given zone.
 * @export
 * @interface TimedZoneRange
 */
export interface TimedZoneRange {
  /**
   * The minimum value in the range.
   * @type {number}
   * @memberof TimedZoneRange
   */
  min?: number;
  /**
   * The maximum value in the range.
   * @type {number}
   * @memberof TimedZoneRange
   */
  max?: number;
  /**
   * The number of seconds spent in this zone
   * @type {number}
   * @memberof TimedZoneRange
   */
  time?: number;
}

/**
 * Check if a given object implements the TimedZoneRange interface.
 */
export function instanceOfTimedZoneRange(
  value: object,
): value is TimedZoneRange {
  return true;
}

export function TimedZoneRangeFromJSON(json: any): TimedZoneRange {
  return TimedZoneRangeFromJSONTyped(json, false);
}

export function TimedZoneRangeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TimedZoneRange {
  if (json == null) {
    return json;
  }
  return {
    min: json["min"] == null ? undefined : json["min"],
    max: json["max"] == null ? undefined : json["max"],
    time: json["time"] == null ? undefined : json["time"],
  };
}

export function TimedZoneRangeToJSON(json: any): TimedZoneRange {
  return TimedZoneRangeToJSONTyped(json, false);
}

export function TimedZoneRangeToJSONTyped(
  value?: TimedZoneRange | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    min: value["min"],
    max: value["max"],
    time: value["time"],
  };
}
