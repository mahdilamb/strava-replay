/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface SummaryPRSegmentEffort
 */
export interface SummaryPRSegmentEffort {
  /**
   * The unique identifier of the activity related to the PR effort.
   * @type {number}
   * @memberof SummaryPRSegmentEffort
   */
  prActivityId?: number;
  /**
   * The elapsed time ot the PR effort.
   * @type {number}
   * @memberof SummaryPRSegmentEffort
   */
  prElapsedTime?: number;
  /**
   * The time at which the PR effort was started.
   * @type {Date}
   * @memberof SummaryPRSegmentEffort
   */
  prDate?: Date;
  /**
   * Number of efforts by the authenticated athlete on this segment.
   * @type {number}
   * @memberof SummaryPRSegmentEffort
   */
  effortCount?: number;
}

/**
 * Check if a given object implements the SummaryPRSegmentEffort interface.
 */
export function instanceOfSummaryPRSegmentEffort(
  value: object,
): value is SummaryPRSegmentEffort {
  return true;
}

export function SummaryPRSegmentEffortFromJSON(
  json: any,
): SummaryPRSegmentEffort {
  return SummaryPRSegmentEffortFromJSONTyped(json, false);
}

export function SummaryPRSegmentEffortFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SummaryPRSegmentEffort {
  if (json == null) {
    return json;
  }
  return {
    prActivityId:
      json["pr_activity_id"] == null ? undefined : json["pr_activity_id"],
    prElapsedTime:
      json["pr_elapsed_time"] == null ? undefined : json["pr_elapsed_time"],
    prDate: json["pr_date"] == null ? undefined : new Date(json["pr_date"]),
    effortCount:
      json["effort_count"] == null ? undefined : json["effort_count"],
  };
}

export function SummaryPRSegmentEffortToJSON(
  json: any,
): SummaryPRSegmentEffort {
  return SummaryPRSegmentEffortToJSONTyped(json, false);
}

export function SummaryPRSegmentEffortToJSONTyped(
  value?: SummaryPRSegmentEffort | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    pr_activity_id: value["prActivityId"],
    pr_elapsed_time: value["prElapsedTime"],
    pr_date:
      value["prDate"] == null ? undefined : value["prDate"].toISOString(),
    effort_count: value["effortCount"],
  };
}
