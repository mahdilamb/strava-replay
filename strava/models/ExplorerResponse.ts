/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { ExplorerSegment } from "./ExplorerSegment";
import {
  ExplorerSegmentFromJSON,
  ExplorerSegmentFromJSONTyped,
  ExplorerSegmentToJSON,
} from "./ExplorerSegment";

/**
 *
 * @export
 * @interface ExplorerResponse
 */
export interface ExplorerResponse {
  /**
   * The set of segments matching an explorer request
   * @type {Array<ExplorerSegment>}
   * @memberof ExplorerResponse
   */
  segments?: Array<ExplorerSegment>;
}

/**
 * Check if a given object implements the ExplorerResponse interface.
 */
export function instanceOfExplorerResponse(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ExplorerResponseFromJSON(json: any): ExplorerResponse {
  return ExplorerResponseFromJSONTyped(json, false);
}

export function ExplorerResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ExplorerResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    segments: !exists(json, "segments")
      ? undefined
      : (json["segments"] as Array<any>).map(ExplorerSegmentFromJSON),
  };
}

export function ExplorerResponseToJSON(value?: ExplorerResponse | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    segments:
      value.segments === undefined
        ? undefined
        : (value.segments as Array<any>).map(ExplorerSegmentToJSON),
  };
}
