/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { PhotosSummaryPrimary } from "./PhotosSummaryPrimary";
import {
  PhotosSummaryPrimaryFromJSON,
  PhotosSummaryPrimaryFromJSONTyped,
  PhotosSummaryPrimaryToJSON,
  PhotosSummaryPrimaryToJSONTyped,
} from "./PhotosSummaryPrimary";

/**
 *
 * @export
 * @interface PhotosSummary
 */
export interface PhotosSummary {
  /**
   * The number of photos
   * @type {number}
   * @memberof PhotosSummary
   */
  count?: number;
  /**
   *
   * @type {PhotosSummaryPrimary}
   * @memberof PhotosSummary
   */
  primary?: PhotosSummaryPrimary;
}

/**
 * Check if a given object implements the PhotosSummary interface.
 */
export function instanceOfPhotosSummary(value: object): value is PhotosSummary {
  return true;
}

export function PhotosSummaryFromJSON(json: any): PhotosSummary {
  return PhotosSummaryFromJSONTyped(json, false);
}

export function PhotosSummaryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PhotosSummary {
  if (json == null) {
    return json;
  }
  return {
    count: json["count"] == null ? undefined : json["count"],
    primary:
      json["primary"] == null
        ? undefined
        : PhotosSummaryPrimaryFromJSON(json["primary"]),
  };
}

export function PhotosSummaryToJSON(json: any): PhotosSummary {
  return PhotosSummaryToJSONTyped(json, false);
}

export function PhotosSummaryToJSONTyped(
  value?: PhotosSummary | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    count: value["count"],
    primary: PhotosSummaryPrimaryToJSON(value["primary"]),
  };
}
