/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ZoneRange } from "./ZoneRange";
import {
  ZoneRangeFromJSON,
  ZoneRangeFromJSONTyped,
  ZoneRangeToJSON,
  ZoneRangeToJSONTyped,
} from "./ZoneRange";

/**
 *
 * @export
 * @interface HeartRateZoneRanges
 */
export interface HeartRateZoneRanges {
  /**
   * Whether the athlete has set their own custom heart rate zones
   * @type {boolean}
   * @memberof HeartRateZoneRanges
   */
  customZones?: boolean;
  /**
   *
   * @type {Array<ZoneRange>}
   * @memberof HeartRateZoneRanges
   */
  zones?: Array<ZoneRange>;
}

/**
 * Check if a given object implements the HeartRateZoneRanges interface.
 */
export function instanceOfHeartRateZoneRanges(
  value: object,
): value is HeartRateZoneRanges {
  return true;
}

export function HeartRateZoneRangesFromJSON(json: any): HeartRateZoneRanges {
  return HeartRateZoneRangesFromJSONTyped(json, false);
}

export function HeartRateZoneRangesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HeartRateZoneRanges {
  if (json == null) {
    return json;
  }
  return {
    customZones:
      json["custom_zones"] == null ? undefined : json["custom_zones"],
    zones:
      json["zones"] == null
        ? undefined
        : (json["zones"] as Array<any>).map(ZoneRangeFromJSON),
  };
}

export function HeartRateZoneRangesToJSON(json: any): HeartRateZoneRanges {
  return HeartRateZoneRangesToJSONTyped(json, false);
}

export function HeartRateZoneRangesToJSONTyped(
  value?: HeartRateZoneRanges | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    custom_zones: value["customZones"],
    zones:
      value["zones"] == null
        ? undefined
        : (value["zones"] as Array<any>).map(ZoneRangeToJSON),
  };
}
