/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { HeartRateZoneRanges } from "./HeartRateZoneRanges";
import {
  HeartRateZoneRangesFromJSON,
  HeartRateZoneRangesFromJSONTyped,
  HeartRateZoneRangesToJSON,
} from "./HeartRateZoneRanges";
import type { PowerZoneRanges } from "./PowerZoneRanges";
import {
  PowerZoneRangesFromJSON,
  PowerZoneRangesFromJSONTyped,
  PowerZoneRangesToJSON,
} from "./PowerZoneRanges";

/**
 *
 * @export
 * @interface Zones
 */
export interface Zones {
  /**
   *
   * @type {HeartRateZoneRanges}
   * @memberof Zones
   */
  heartRate?: HeartRateZoneRanges;
  /**
   *
   * @type {PowerZoneRanges}
   * @memberof Zones
   */
  power?: PowerZoneRanges;
}

/**
 * Check if a given object implements the Zones interface.
 */
export function instanceOfZones(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ZonesFromJSON(json: any): Zones {
  return ZonesFromJSONTyped(json, false);
}

export function ZonesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Zones {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    heartRate: !exists(json, "heart_rate")
      ? undefined
      : HeartRateZoneRangesFromJSON(json["heart_rate"]),
    power: !exists(json, "power")
      ? undefined
      : PowerZoneRangesFromJSON(json["power"]),
  };
}

export function ZonesToJSON(value?: Zones | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    heart_rate: HeartRateZoneRangesToJSON(value.heartRate),
    power: PowerZoneRangesToJSON(value.power),
  };
}
